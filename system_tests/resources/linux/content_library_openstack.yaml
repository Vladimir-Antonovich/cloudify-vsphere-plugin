tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/4.6/types.yaml
  - https://raw.githubusercontent.com/cloudify-incubator/cloudify-utilities-plugin/master/plugin.yaml
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-vsphere-plugin/master/plugin.yaml

inputs:

  vcenter_user:
    type: string

  vcenter_password:
    type: string

  vcenter_ip:
    type: string

  vcenter_port:
    type: string
    default: 443

  vcenter_datacenter:
    type: string
    description: >
       vcenter datacenter
    default: Datacenter

  vcenter_resource_pool:
    description: >
      Resource pool name
    default: Resources

  vcenter_datastore:
    type: string
    description: >
      vcenter datastore
    default: datastore1

  vcenter_hypervisor_host:
    type: string
    description: >
      vcenter host

  vsphere_auto_placement:
    type: string
    default: true

  template_library:
    type: string
    description: >
      "CentOS template library"
    default: "CentOS"

  template_name:
    type: string
    description: >
      "CentOS template name"
    default: "CentOS-7-x86_64-GenericCloud-1907"


###############################################################################
#  DSL section
###############################################################################
dsl_definitions:

  connection_config: &connection_config
    username: { get_input: vcenter_user }
    password: {get_input: vcenter_password }
    host: { get_input: vcenter_ip }
    port: { get_input: vcenter_port }
    datacenter_name: {get_input: vcenter_datacenter }
    resource_pool_name: { get_input: vcenter_resource_pool }
    auto_placement: { get_input: vsphere_auto_placement }
    allow_insecure: true

node_templates:

  agent_key:
    type: cloudify.keys.nodes.RSAKey
    properties:
      use_secret_store: false
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: keys.cloudify_ssh_key.operations.create
          inputs:
            store_private_key_material: true

  cloud_init_user:
    type: cloudify.nodes.CloudInit.CloudConfig
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            resource_config:
              users:
              - name: stack
                primary_group: stack
                # mkpasswd --method=SHA-512 --rounds=4096
                # hash of passw0rd
                passwd: $6$rounds=4096$sEbWYCRnr$kV18TY9O9Bkq0DdSo5Zvp8saK0gnpZ3RD.55YvQp1ZuaU89eG/T3UrWRh7s9SzchEjebL9ETr2KyMVHqtiXbQ.
                groups: users, admin, wheel
                lock_passwd: false
                shell: /bin/bash
                homedir: /opt/stack
                sudo: ['ALL=(ALL) NOPASSWD:ALL']
                ssh_authorized_keys:
                - { get_attribute: [agent_key, public_key_export] }
                - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC50fulmwIfQ2EViqi5qmfCrF8qTxcZTYp4YCwFGi9GptJf8dQK/qiFOjMoL4vo++QfIK4CWWlEc3HyukS8LorVP45syhll7SQ55dG5xGaEGTtCknVep76LjRPWWZIwGEgDmY/Iu8h1Hf00M3bzwOcNfkQ+tPX7hJIfjvMgdKz8eL7ZFzjtnTt02J/uouVpiBTOO6Cb8mIsTnY/Z7HmMJB34h3Fwn+xAVEQY+TDAUJch65XMXD+KUzC52nl5qf+gShYBW1UdmNGCQ41h1u508LHhr+gYSofsk0bRfY5hHuA69qL8MClOjTD2ETowSfdwvOzHgqEJv5ls+gmoQhE8RBwiFP1vbR6XM1NF3FoMe7GnaJAO9grvlYq+XkeBY7JkhiHWosVl9QHRE0gO9e8QYxZH1uT+R5Bmt4oLS1bwQLpxQ4N0GnhRfaDWyhh/KNG/CwoThPwOFzOvm2rCcajiqfgJuU5HVSIfU+Ct4C0J7NYZwzrkZgIcYPTot/69hwiPDQ75Jwowi/19ema0zTHQZUc5fZe+UgK/7lHMllPUbmpkmueSdCQc+fNswtk0k/OCFqFzzU5C20ZB7un44Ledz2HROjozFwNi8uVRBhHrL4ie0FjbuE3i9LybPt9x36vDRNo8H2UDaHDOLF3zSaZjkrseKBKFDaZwCFnxpx5m4ZSaQ== cluster@cloudify.co
              growpart:
                mode: auto
                devices: ['/']
                ignore_growroot_disabled: false
              packages:
              - [epel-release]
              - [deltarpm]
              - [git]
              - [python-virtualenv]
              write_files:
              - path: /etc/openstack_local.conf
                content: |
                  [[local|localrc]]
                  FLOATING_RANGE=192.168.1.224/27
                  FIXED_RANGE=10.11.12.0/24
                  ADMIN_PASSWORD=supersecret
                  DATABASE_PASSWORD=iheartdatabases
                  RABBIT_PASSWORD=flopsymopsy
                  SERVICE_PASSWORD=iheartksl
                  HOST_IP=172.16.168.156
    relationships:
    - target: agent_key
      type: cloudify.relationships.depends_on

  cloud_init_meta:
    type: cloudify.nodes.CloudInit.CloudConfig
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            resource_config:
              instance-id: vsphere_cloudinit

  cloud_init_network:
    type: cloudify.nodes.CloudInit.CloudConfig
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            resource_config:
              version: 2
              ethernets:
                ens192:
                  match:
                    name: ens192
                  addresses:
                  - 172.16.168.156/255.255.255.0
                  gateway4: 172.16.168.1
                  nameservers:
                    addresses:
                    - 8.8.8.8
                    - 208.67.222.222
                    - 208.67.220.220
                    - 1.1.1.1

  vm_folder:
    type: cloudify.vsphere.nodes.VMFolder
    properties:
      use_external_resource: true
      name: vm
      connection_config: *connection_config

  resource_pool:
    type: cloudify.vsphere.nodes.ResourcePool
    properties:
      use_external_resource: true
      name: { get_input: vcenter_resource_pool }
      connection_config: *connection_config

  datastore:
    type: cloudify.vsphere.nodes.Datastore
    properties:
      use_external_resource: true
      name: { get_input: vcenter_datastore }
      connection_config: *connection_config

  hypervisor_host:
    type: cloudify.vsphere.nodes.Host
    properties:
      use_external_resource: true
      name: { get_input: vcenter_hypervisor_host }
      connection_config: *connection_config

  network:
    type: cloudify.vsphere.nodes.Network
    properties:
      use_external_resource: true
      network:
        name: Internal
        switch_distributed: false
      connection_config: *connection_config

  vm_content_library:
    type: cloudify.vsphere.nodes.ContentLibraryDeployment
    properties:
      library_name:  { get_input: template_library }
      template_name: { get_input: template_name }
      connection_config: *connection_config
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            target:
              folder_id: { get_attribute: [vm_folder, vsphere_vm_folder_id] }
              host_id: { get_attribute: [hypervisor_host, vsphere_hypervisor_host_id] }
              resource_pool_id: { get_attribute: [resource_pool, vsphere_resource_pool_id] }
            deployment_spec:
              default_datastore_id: { get_attribute: [datastore, vsphere_datastore_id] }
              annotation: Template annotation
              additional_parameters:
              - type: DeploymentOptionParams
                selected_key: quadcpu
                "@class": com.vmware.vcenter.ovf.deployment_option_params
              network_mappings:
              - key: management
                value: { get_attribute: [network, vsphere_network_id, 0] }
    relationships:
    - target: datastore
      type: cloudify.relationships.depends_on
    - target: vm_folder
      type: cloudify.relationships.depends_on
    - target: resource_pool
      type: cloudify.relationships.depends_on
    - target: hypervisor_host
      type: cloudify.relationships.depends_on
    - target: network
      type: cloudify.relationships.depends_on

  vm_instance:
    type: cloudify.vsphere.nodes.Server
    properties:
      use_external_resource: true
      connection_config: *connection_config
      enable_start_vm: false
      os_family: other
      agent_config:
        install_method: none
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          inputs:
            server:
              name: { get_attribute: [vm_content_library, vm_name] }
    relationships:
    - target: vm_content_library
      type: cloudify.relationships.depends_on

  cloud_init_image:
    type: cloudify.vsphere.nodes.CloudInitISO
    properties:
      connection_config: *connection_config
      datacenter_name: { get_input: vcenter_datacenter }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            allowed_datastore_ids: { get_attribute: [vm_instance, datastore_ids] }
            vol_ident: cidata
            files:
              meta-data: { get_attribute: [cloud_init_meta, cloud_config ] }
              network-config: { get_attribute: [cloud_init_network, cloud_config ] }
              user-data: { get_attribute: [cloud_init_user, cloud_config ] }
    relationships:
    - target: vm_instance
      type: cloudify.relationships.depends_on
    - target: cloud_init_network
      type: cloudify.relationships.depends_on
    - target: cloud_init_meta
      type: cloudify.relationships.depends_on
    - target: cloud_init_user
      type: cloudify.relationships.depends_on

  instance_with_cdrom:
    type: cloudify.vsphere.nodes.Server
    properties:
      use_external_resource: true
      connection_config: *connection_config
      os_family: other
      agent_config:
        install_method: none
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          inputs:
            cdrom_image: { get_attribute: [cloud_init_image, storage_image ] }
            server:
              name: { get_attribute: [vm_content_library, vm_name] }
        stop:
          inputs:
            force_stop: true
        delete:
          inputs:
            force_delete: true
    relationships:
    - target: vm_instance
      type: cloudify.relationships.depends_on
    - target: cloud_init_image
      type: cloudify.relationships.depends_on

  example_node:
    type: cloudify.nodes.WebServer
    interfaces:
      cloudify.interfaces.lifecycle:
          create:
            implementation: terminal.cloudify_terminal.tasks.run
            inputs:
              terminal_auth:
                smart_device: true
                user: stack
                key_content: { get_attribute: [agent_key, private_key_export] }
                ip: 172.16.168.156
                store_logs: true
                warnings:
                - Another app is currently holding the yum lock; waiting for it to exit....
              calls:
              # set terminal properties
              - action: echo $LANG
              - action: stty rows 200 cols 160
              # grow up
              - action: sudo sudo xfs_growfs /
              # install packages
              - action: sudo yum clean metadata
              # need to install epel before any other
              - action: sudo yum install -y epel-release deltarpm
              # need to install prerequired packages
              - action: sudo yum install -y git python-virtualenv
              # install openstack
              - action: sudo yum-config-manager --enable openstack-train
              - action: sudo yum -y update
              - action: sudo yum install -y  centos-release-openstack-train
              - action: sudo yum -y update
              - action: sudo yum install -y openstack-packstack
              - action: sudo yum downgrade -y leatherman
              - action: sudo hostname openstack.cloud
              - action: sudo su -c "echo '172.16.168.156 openstack.cloud' >> /etc/hosts"
              - action: sudo su -c "echo 'openstack.cloud' >> /etc/hostname"
              - action: sudo packstack --allinone
    relationships:
      - target: instance_with_cdrom
        type: cloudify.relationships.contained_in
