tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/4.6/types.yaml
  - plugin:cloudify-fabric-plugin
  - plugin:cloudify-vsphere-plugin

inputs:

  key_path:
    type: string

  agent_user:
    type: string
    default: centos

  use_external_server:
    type: boolean
    default: false

  server_name:
    type: string
    default: storage-example-server

  template_name:
    type: string
    default: CentOS-7.8.2003-tmpl

  network_name:
    type: string
    default: Internal

  switch_distributed:
    type: boolean
    default: false

dsl_definitions:

  connection_config: &connection_config
    username: { get_secret: vsphere_username }
    password: { get_secret: vsphere_password }
    host: { get_secret: vsphere_host }
    port: { get_input: vsphere_port }
    datacenter_name: { get_secret: vsphere_datacenter_name }
    resource_pool_name: { get_secret: vsphere_resource_pool_name }
    auto_placement: { get_secret: vsphere_auto_placement }
    allow_insecure: { get_input: vsphere_allow_insecure }

node_templates:

  vm:
    type: cloudify.vsphere.nodes.Server
    properties:
      use_external_resource: { get_input: use_external_server }
      connection_config: *connection_config
      agent_config:
        install_method: none
      server:
        name: { get_input: server_name }
        template: { get_input: template_name }
        cpus: 1
        memory: 1024
      networking:
        connect_networks:
          - name: { get_input: network_name }
            management: true
            external: true
            switch_distributed: false
            use_dhcp: false
            network: 172.16.168.0/24
            gateway: 172.16.168.1
            ip: 172.16.168.201
      custom_attributes:
        username: { get_secret: vsphere_username }

  storage:
    type: cloudify.vsphere.nodes.Storage
    properties:
      storage:
        storage_size: 1
      connection_config: *connection_config
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: fabric.fabric_plugin.tasks.run_task
          inputs:
            tasks_file: scripts/test_disk.py
            task_name: configure
            fabric_env:
              user: { get_input: agent_user }
              key: { get_secret: vsphere_private_key }
              host_string: { get_attribute: [ vm, public_ip ] }
              scsi_id: { get_attribute: [ SELF, scsi_id ] }
    relationships:
      - target: vm
        type: cloudify.vsphere.storage_connected_to_server
